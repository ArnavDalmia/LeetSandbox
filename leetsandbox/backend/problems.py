PROBLEMS = {
    "TwoSum": {
        "number": 1,
        "originLeetCode": True,
        "params": {"nums": "List[int]", "target": "int"},
        "link": "https://leetcode.com/problems/two-sum/description/",
    },
    "TwoSum(II)": {
        "number": 167,
        "originLeetCode": True,
        "params": {"numbers": "List[int]", "target": "int"},
        "link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description",
    },
    "reverse-string": {
        "originLeetCode": False,
        "params": {"s": "str"},
    },
    "ValidParentheses": {
        "number": 20,
        "originLeetCode": True,
        "params": {"s": "str"},
        "link": "https://leetcode.com/problems/valid-parentheses/",
    },
    "KokoEatingBananas": {
        "number": 875,
        "originLeetCode": True,
        "params": {"piles": "List[int]", "h": "int"},
        "link": "https://leetcode.com/problems/koko-eating-bananas/",
    },
    "DailyTemperatures": {
        "number": 739,
        "originLeetCode": True,
        "params": {"temperatures": "List[int]"},
        "link": "https://leetcode.com/problems/daily-temperatures/",
    },
    "ContainerWithMostWater": {
        "number": 11,
        "originLeetCode": True,
        "params": {"height": "List[int]"},
        "link": "https://leetcode.com/problems/container-with-most-water/",
    },
    "BestTimeToBuyAndSellStock": {
        "number": 121,
        "originLeetCode": True,
        "params": {"prices": "List[int]"},
        "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
    },
    "ValidPalindrome": {
        "number": 125,
        "originLeetCode": True,
        "params": {"s": "str"},
        "link": "https://leetcode.com/problems/valid-palindrome/",
    },
    "LongestConsecutiveSequence": {
        "number": 128,
        "originLeetCode": True,
        "params": {"nums": "List[int]"},
        "link": "https://leetcode.com/problems/longest-consecutive-sequence/",
    },
    # "LinkedListCycle": {
    #     "number": 141,
    #     "originLeetCode": True,
    #     "params": {"values": "List[int]", "cycle_pos": "int"},
    #     "link": "https://leetcode.com/problems/linked-list-cycle/",
    # },
    "EvaluateReversePolishNotation": {
        "number": 150,
        "originLeetCode": True,
        "params": {"tokens": "List[str]"},
        "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
    },
    "FindMinimumInRotatedSortedArray": {
        "number": 153,
        "originLeetCode": True,
        "params": {"nums": "List[int]"},
        "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
    },
    "MinStack": {
        "number": 155,
        "originLeetCode": True,
        "params": {},
        "link": "https://leetcode.com/problems/min-stack/",
    },
    "ThreeSum": {
        "number": 15,
        "originLeetCode": True,
        "params": {"nums": "List[int]"},
        "link": "https://leetcode.com/problems/3sum/",
    },
    "ReverseLinkedList": {
        "number": 206,
        "originLeetCode": True,
        "params": {"values": "List[int]"},
        "link": "https://leetcode.com/problems/reverse-linked-list/",
    },
    "ContainsDuplicate": {
        "number": 217,
        "originLeetCode": True,
        "params": {"nums": "List[int]"},
        "link": "https://leetcode.com/problems/contains-duplicate/",
    },
    "MergeTwoSortedLists": {
        "number": 21,
        "originLeetCode": True,
        "params": {"list1_values": "List[int]", "list2_values": "List[int]"},
        "link": "https://leetcode.com/problems/merge-two-sorted-lists/",
    },
    "ProductOfArrayExceptSelf": {
        "number": 238,
        "originLeetCode": True,
        "params": {"nums": "List[int]"},
        "link": "https://leetcode.com/problems/product-of-array-except-self/",
    },
    "ValidAnagram": {
        "number": 242,
        "originLeetCode": True,
        "params": {"s": "str", "t": "str"},
        "link": "https://leetcode.com/problems/valid-anagram/",
    },
    "SearchInRotatedSortedArray": {
        "number": 33,
        "originLeetCode": True,
        "params": {"nums": "List[int]", "target": "int"},
        "link": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
    },
    "TopKFrequentElements": {
        "number": 347,
        "originLeetCode": True,
        "params": {"nums": "List[int]", "k": "int"},
        "link": "https://leetcode.com/problems/top-k-frequent-elements/",
    },
    "LongestSubstringWithoutRepeatingCharacters": {
        "number": 3,
        "originLeetCode": True,
        "params": {"s": "str"},
        "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    },
    "GroupAnagrams": {
        "number": 49,
        "originLeetCode": True,
        "params": {"strs": "List[str]"},
        "link": "https://leetcode.com/problems/group-anagrams/",
    },
    "MergeIntervals": {
        "number": 56,
        "originLeetCode": True,
        "params": {"intervals": "List[List[int]]"},
        "link": "https://leetcode.com/problems/merge-intervals/",
    },
    "LongestPalindromicSubstring": {
        "number": 5,
        "originLeetCode": True,
        "params": {"s": "str"},
        "link": "https://leetcode.com/problems/longest-palindromic-substring/",
    },
    "BinarySearch": {
        "number": 704,
        "originLeetCode": True,
        "params": {"nums": "List[int]", "target": "int"},
        "link": "https://leetcode.com/problems/binary-search/",
    },
    "SearchA2DMatrix": {
        "number": 74,
        "originLeetCode": True,
        "params": {"matrix": "List[List[int]]", "target": "int"},
        "link": "https://leetcode.com/problems/search-a-2d-matrix/",
    },
    "CarFleet": {
        "number": 853,
        "originLeetCode": True,
        "params": {"target": "int", "position": "List[int]", "speed": "List[int]"},
        "link": "https://leetcode.com/problems/car-fleet/",
    },
    "TimeBasedKeyValueStore": {
        "number": 981,
        "originLeetCode": True,
        "params": {},
        "link": "https://leetcode.com/problems/time-based-key-value-store/",
    },
}